{"remainingRequest":"/Users/huhaodong/Desktop/speakBook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/huhaodong/Desktop/speakBook/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huhaodong/Desktop/speakBook/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huhaodong/Desktop/speakBook/src/views/login/login.vue?vue&type=template&id=a49090ce&","dependencies":[{"path":"/Users/huhaodong/Desktop/speakBook/src/views/login/login.vue","mtime":1656836396304},{"path":"/Users/huhaodong/Desktop/speakBook/node_modules/cache-loader/dist/cjs.js","mtime":1656821619186},{"path":"/Users/huhaodong/Desktop/speakBook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1656821616997},{"path":"/Users/huhaodong/Desktop/speakBook/node_modules/cache-loader/dist/cjs.js","mtime":1656821619186},{"path":"/Users/huhaodong/Desktop/speakBook/node_modules/vue-loader/lib/index.js","mtime":1656821616996}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}